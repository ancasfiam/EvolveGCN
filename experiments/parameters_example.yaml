# Name of the dataset (can be arbitrary)
data: Refugee

# Parameters specific to your dataset
dataset_args:
  folder: C:/Users/Anca/Documents/GitHub/EvolveGCN/data/  # Directory where your data is located
  edges_file: Processed_Refugee_Stock_Data_Edges.xlsx
  nodes_file: Processed_Refugee_Stock_Data_Nodes.xlsx
  aggr_time: 20 # Aggregation time window (adjust based on your data)
  feats_per_node: 4  # Number of features per node (adjust based on your data)

# General settings
use_cuda: True
use_logfile: True  # Set to True if you want to save output in a log file

# Model selection
model: egcn_o  # Options: gcn, gruA, gruB, egcn_h, egcn_o (choose the one you prefer or experiment with)

# Task type
task: link_pred  # Task type (options: link_pred, edge_cls, node_cls)

# Class weights for tasks (adjust based on your needs)
class_weights: [0.1, 0.9]
use_2_hot_node_feats: False
use_1_hot_node_feats: True
save_node_embeddings: False

# Data splitting
train_proportion: 0.7  # 70% of data for training
dev_proportion: 0.1  # 10% of data for validation

# Training settings
num_epochs: 1000
steps_accum_gradients: 1
learning_rate: 0.001  # Use None to randomly pick between learning_rate_min and learning_rate_max
learning_rate_min: 0.0001
learning_rate_max: 0.1
negative_mult_training: 50
negative_mult_test: 100
smart_neg_sampling: False
seed: 1234
target_measure: MAP  # Metric to define the best epoch (e.g., F1, Precision, Recall, MRR, MAP)
target_class: 1  # Target class for metric evaluation

# Early stopping
early_stop_patience: 500

# Validation settings
eval_after_epochs: 8  # Number of epochs before the first validation
adj_mat_time_window: 1  # Time window to create adjacency matrix per timestep
num_hist_steps: 8
num_hist_steps_min: 1 # only used if num_hist_steps: None
num_hist_steps_max: 11 # only used if num_hist_steps: None

# Data loading parameters
data_loading_params:
  batch_size: 1  # Should be 1 for this model
  num_workers: 0  # Adjust based on available hardware

# GCN model parameters (adjust as needed for your data)
gcn_parameters:
  feats_per_node: 100
  feats_per_node_min: 50
  feats_per_node_max: 256
  layer_1_feats: 100
  layer_1_feats_min: 10
  layer_1_feats_max: 200
  layer_2_feats: 100
  layer_2_feats_same_as_l1: True
  k_top_grcu: 200
  num_layers: 2
  lstm_l1_layers: 1
  lstm_l1_feats: 100
  lstm_l1_feats_min: 10
  lstm_l1_feats_max: 200
  lstm_l2_layers: 1
  lstm_l2_feats: None
  lstm_l2_feats_same_as_l1: True
  cls_feats: 100  # Hidden size of the classifier
  cls_feats_min: 100
  cls_feats_max: 800

# Optional comments section
comments:
  - Custom comments or notes about this configuration
